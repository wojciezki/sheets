# Generated by Django 2.2.1 on 2019-05-14 15:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sheets.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ExamSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('template', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=256)),
                ('creator', sheets.fields.RelatedNameField(on_delete=django.db.models.deletion.CASCADE, related_name='created_exam_sheets', to=settings.AUTH_USER_MODEL)),
                ('editor', sheets.fields.RelatedNameField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='edited_exam_sheets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('MULTI_CHOICE', 'Multi choice'), ('TEXT', 'Text'), ('TRUE_FALSE', 'True false choice')], default='TEXT', max_length=56)),
                ('max_grade', models.IntegerField(default=None, null=True)),
                ('question', models.TextField()),
                ('creator', sheets.fields.RelatedNameField(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('editor', sheets.fields.RelatedNameField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='edited_tasks', to=settings.AUTH_USER_MODEL)),
                ('exam_sheet', models.ManyToManyField(related_name='tasks', to='sheets.ExamSheet')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('text_answer', models.TextField(default=None, null=True)),
                ('choice_answer', models.BooleanField(default=False)),
                ('points', models.IntegerField(default=1, null=True)),
                ('creator', sheets.fields.RelatedNameField(on_delete=django.db.models.deletion.CASCADE, related_name='created_solutions', to=settings.AUTH_USER_MODEL)),
                ('editor', sheets.fields.RelatedNameField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='edited_solutions', to=settings.AUTH_USER_MODEL)),
                ('task', sheets.fields.RelatedNameField(on_delete=django.db.models.deletion.CASCADE, related_name='related_solutions', to='sheets.Task')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('text_answer', models.TextField(default=None, null=True)),
                ('choice_answer', models.BooleanField(default=False)),
                ('submit', models.BooleanField(default=False)),
                ('grade', models.IntegerField(default=None, null=True)),
                ('creator', sheets.fields.RelatedNameField(on_delete=django.db.models.deletion.CASCADE, related_name='created_answers', to=settings.AUTH_USER_MODEL)),
                ('editor', sheets.fields.RelatedNameField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='edited_answers', to=settings.AUTH_USER_MODEL)),
                ('solution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='sheets.Solution')),
                ('task', sheets.fields.RelatedNameField(on_delete=django.db.models.deletion.CASCADE, related_name='related_answers', to='sheets.Task')),
            ],
            options={
                'unique_together': {('creator', 'solution')},
            },
        ),
    ]
